<?xml version="1.0" encoding="UTF-8"?>
<item><pubDate>Mon, 09 Dec 2013 11:39:38 +0100</pubDate><title><![CDATA[Case 4 - Objecten en functies]]></title><url><![CDATA[case-4-objecten-en-functies]]></url><meta><![CDATA[]]></meta><metad><![CDATA[]]></metad><menu><![CDATA[Case 4 - Objecten en functies]]></menu><menuOrder><![CDATA[5]]></menuOrder><menuStatus><![CDATA[Y]]></menuStatus><template><![CDATA[template.php]]></template><parent><![CDATA[]]></parent><content><![CDATA[&lt;h2&gt;Source&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;data/uploads/case4.zip&quot;&gt;Download de source&lt;/a&gt; voor deze opdracht om te beginnen met de case. Pak de zip file uit zoals je in case 1 hebt geleerd. Als het goed is zie je nu in WebStorm onder de folder &quot;opdrachten&quot; de sources van case 4 staan.&lt;/p&gt;
&lt;h2&gt;Omschrijving&lt;/h2&gt;
&lt;p&gt;Zojuist is verteld hoe je objecten en functies creeert en hoe je hier vervolgens gebruik van kunt maken. Het doel van deze opdracht is het leren van omgaan met objecten, zowel in JSON als &quot;normale&quot; notatie. In deze opdracht leer je ook over de verschillende manieren van property/methoddeclaratie binnen javascript.&lt;/p&gt;
&lt;h2&gt;Opdracht 1 - JSON&lt;/h2&gt;
&lt;p&gt;Open in je browser de URL &quot;http://localhost:8000/opdrachten/case4/template.html&quot; om de vierde case te laden. Je ziet het todoscherm van de applicatie voor je.&lt;/p&gt;
&lt;p&gt;Open in WebStorm het bestand &quot;opdrachten/case4/gebruikers.js&quot;. In dit bestand worden een aantal gebruikersobjecten gecreerd. Een meer gebruikelijke manier om dit te doen is middels het JSON formaat. Schrijf de huidige manier van objectdeclaratie om naar de JSON notatie. Doe ditzelfde voor todos.js. Refresh de browser om te controleren of pagina nog werkt, nadat je de bestanden hebt omgeschreven.&lt;/p&gt;
&lt;h2&gt;&lt;br /&gt;
	Opdracht 2 - Prototyping&lt;/h2&gt;
&lt;p&gt;Voor deze opdracht is er een View.js gedefinieerd. In deze file zie je op dit moment een constructor function staan die een viewNaam accepteerd. De bedoeling is dat we een View class maken waaraan we wat generieke view functionaliteiten aan gaan toevoegen. Doorloop onderstaande stappen om de opdracht te voltooien.&lt;/p&gt;
&lt;h3&gt;Instance variabele&lt;/h3&gt;
&lt;ol&gt;
	&lt;li&gt;Zorg ervoor dat de viewNaam parameter die als constructor parameter wordt meegegeven wordt opgeslagen als instance variabele in de class.&lt;/li&gt;
	&lt;li&gt;Refresh in je browser de pagina en gebruik FireBug om de class te instantieren met een viewNaam parameter. Controleer middels de console of de juiste instancenaam is gezet.&lt;/li&gt;
	&lt;li&gt;Welke constructor is er gedefinieerd op het prototype van het View object? Gebruik FireBug om het antwoord te bepalen.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Instance method&lt;/h3&gt;
&lt;ol start=&quot;4&quot;&gt;
	&lt;li&gt;Maak een methode logVariable op het View object. Zorg ervoor dat deze methode geinherit kan worden door instanties van het View object. Zorg er dus voor dat dit een instance method wordt. De methode dient één variable te accepteren: variableToLog. De implementatie van deze methode dient de viewNaam uit de constructor te loggen en daarna de meegegeven variable op de console te loggen.&lt;/li&gt;
	&lt;li&gt;Refresh in je browser de pagina en gebruik FireBug om de class te instantieren met een viewNaam parameter. Roep vervolgens de net gemaakte methode aan op de objectinstantie en controleer of zowel de viewNaam als de meegegeven parameter worden gelogd.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Class variabele (static variabele)&lt;/h3&gt;
&lt;ol start=&quot;6&quot;&gt;
	&lt;li&gt;Maak een constante op de class waarmee je aan kunt geven of je het loggen aan of uit wil zetten. Zorg ervoor dat je niet gebruik maakt van een instance variabele, maar een class variabele. Zorg voor een duidelijke naam voor de constante.&lt;/li&gt;
	&lt;li&gt;Pas de methode die je in stap 4 hebt gemaakt aan, zodat deze a.d.v. de in stap 6 aangemaakte constante een logregel naar de console maakt. Dat betekend dat als de constante op false staat, er geen logregel op de console moet verschijnen.&lt;/li&gt;
	&lt;li&gt;Refresh in je browser de pagina en gebruik FireBug om de class te instantieren met een viewNaam parameter. Roep vervolgens de logVariable methode aan op de objectinstantie en controleer of zowel de viewNaam als de meegegeven parameter worden gelogd. Zet vervolgens de constante op false en roep nogmaals de logVariable methode aan. Controleer of er daadwerkelijk geen logregel verschijnt.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Class method (static method)&lt;/h3&gt;
&lt;ol start=&quot;9&quot;&gt;
	&lt;li&gt;Maak een methode op de class waarmee je kunt controleren of er een console beschikbaar is om naar te loggen. Zorg ervoor dat je niet gebruik maakt van een instance method, maar een class method. Zorg voor een duidelijke naam voor de methode.&lt;/li&gt;
	&lt;li&gt;Pas de methode die je in stap 4 hebt gemaakt aan, zodat deze tevens a.d.v. het resultaat van de methode in stap 9 de log statements uitvoert. Als er geen console is, kan er immers niet gelogd worden.&lt;/li&gt;
	&lt;li&gt;Refresh in je browser de pagina en gebruik FireBug om de class te instantieren met een viewNaam parameter. Roep vervolgens de logVariable methode aan op de objectinstantie en controleer of zowel de viewNaam als de meegegeven parameter worden gelogd. Zet vervolgens de console op null of undefined en roep nogmaals de logVariable methode aan. Controleer of er geen logregel en geen foutmelding (error) verschijnt.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Prototype als JSON&lt;/h3&gt;
&lt;ol start=&quot;12&quot;&gt;
	&lt;li&gt;Er zijn twee manieren om deze methode te declareren, 1 middels JSON en een andere decleratief. Probeer middels deze opdracht het prototype om te schrijven zodat deze in de andere declaratiestijl wordt gedeclareerd die je nu hebt. Dus als je het prototype met de logVariable methode nu middels JSON hebt gedeclareerd, schrijf hem dan om zodat er niet gebruik gemaakt wordt van JSON. En andersom, als je hem nu niet middels JSON hebt gedeclareerd, zorg er dan voor dat het prototype met de logVariable methode middels JSON wordt gedeclareerd.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Opdracht 3 - Extra opdracht&lt;/h2&gt;
&lt;p&gt;Mocht je tijd overhebben na het maken van bovenstaande opdrachten, dan kun je je middels deze extra opdracht verdiepen in het maken van objecten en wat standaard functies.&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Pas het gebruikers.js bestand aan zodat er een Gebruiker object aan wordt toegevoegd met een 3-tal properties. Instantieer dit object vervolgens 3 keer zodat er een array ontstaat van 3 gebruikers.&lt;/li&gt;
	&lt;li&gt;Refresh de browser en controleer of nog steeds de gebruikers aan de linkerkant worden weergegeven. Als dit niet zo is, heb je net een fout gemaakt in stap 1. Als je het goed hebt gedaan dan valt je op dat er voor de gebruikende kant geen verschil is tussen de JSON gebruiker declaratie die er eerst stond, en de class instances die je er nu hebt staan, zoals je hebt gemaakt in stap 1.&lt;/li&gt;
	&lt;li&gt;Pas de View aan zodat de implementatie van de log methode middels de volgende regel een log statement uitvoert: &quot;console.log(this.viewNaam + &#039; - &#039; + variableToLog);&quot;&lt;/li&gt;
	&lt;li&gt;Refresh in je browser de pagina en gebruik FireBug om de class te instantieren met een viewNaam parameter. Roep vervolgens de logVariable methode aan op de objectinstantie met &quot;gebruikers&quot; (zonder aanhalingstekens) als parameter. Als het goed is zie je een dergelijke logregel verschijnen: &quot;TodoView - [object Object],[object Object],[object Object]&quot;. Hoe denk je dat dit komt?&lt;/li&gt;
	&lt;li&gt;Voeg een instance method to aan het Gebruiker object genaamd &quot;toString&quot;. Hiermee override je de toString methode van Object. Implementeer de toString methode zo dat het id en de gebruikersnaam van een Gebruiker worden teruggegeven.&lt;/li&gt;
	&lt;li&gt;Voer nogmaals stap 4 uit. Als het goed is zie je nu een dergelijke logregel verschijnen: &quot;TodoView - [ID: 1 - Gebruikersnaam: jscript],[ID: 2 - Gebruikersnaam: cscherp],[ID: 3 - Gebruikersnaam: scala]&quot;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
]]></content><private><![CDATA[]]></private><author><![CDATA[jsadmin]]></author></item>
