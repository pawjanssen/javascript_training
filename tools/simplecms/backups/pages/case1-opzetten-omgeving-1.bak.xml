<?xml version="1.0" encoding="UTF-8"?>
<item><pubDate>Fri, 22 Nov 2013 14:08:19 +0100</pubDate><title><![CDATA[Case 2 - Selectors]]></title><url><![CDATA[case1-opzetten-omgeving-1]]></url><meta><![CDATA[]]></meta><metad><![CDATA[]]></metad><menu><![CDATA[Case 1 - Opzet van omgeving]]></menu><menuOrder><![CDATA[2]]></menuOrder><menuStatus><![CDATA[Y]]></menuStatus><template><![CDATA[template.php]]></template><parent><![CDATA[]]></parent><content><![CDATA[&lt;h2&gt;&lt;strong&gt;Source&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;data/uploads/case1.zip&quot;&gt;Download de source&lt;/a&gt; voor deze opdracht om te beginnen met de case. Pak de zip file uit zoals je in case 1 hebt geleerd. Als het goed is zie je nu in WebStorm onder de folder &quot;opdrachten&quot; de sources van case 2 staan.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Omschrijving&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Zojuist is verteld hoe je middels selectors elementen uit de DOM kunt selecteren om ze vervolgens te kunnen bewerken. Het doel van deze opdracht is te leren hoe de selectors werken en hoe op een pagina op verschillende manieren DOM elementen zijn te selecteren. Tevens leer je in deze opdrachten hoe je over geselecteerde DOM elementen itereert en hoe je hier basic operaties op uitvoert (tekst aanpassen en verwijderen).&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;Opdracht 1 - Queryen DOM Elementen&lt;/em&gt;&lt;/h2&gt;
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt;
&lt;h2&gt;Opdracht 2 - Starten van de server&lt;/h2&gt;
&lt;p&gt;Als REST server gebruiken we NodeJS, deze verzorgt de mogelijkheden om data op te slaan en data op te halen. Tevens fungeert deze asl WebSocket server. Tijdens de cursus hoef je aan de serverkant niets te doen, echter dien je wel de server te starten en bekend te zijn met de REST structuur die we hebben opgezet.&lt;/p&gt;
&lt;h3&gt;Stap 1&lt;/h3&gt;
&lt;p&gt;Bovenin WebStorm naast de tekst &quot;NodeJS Server&quot; staan een &quot;Run&quot; en een&amp;nbsp; &quot;Debug&quot; knop. Gebruik de &quot;Run&quot; knop om de server op te starten.&lt;/p&gt;
&lt;h3&gt;Stap 2&lt;/h3&gt;
&lt;p&gt;De NodeJS server draait op poort 8000. Bekijk de REST service documentatie door in de browser te navigeren naar &quot;http://localhost:8000/docs&quot;&lt;/p&gt;
&lt;p&gt;Beantwoord onderstaande vragen:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Welke entiteiten kunnen opgeslagen worden?&lt;/li&gt;
	&lt;li&gt;Op welk pad is de client benaderbaar?&lt;/li&gt;
	&lt;li&gt;Welke URL roep je vermoedelijk aan als je Todo &quot;1&quot; van gebruiker &quot;1&quot; wilt ophalen?&lt;/li&gt;
	&lt;li&gt;Welke URL roep je vermoedelijk aan als je een nieuwe Todo aan gebruiker &quot;1&quot; wilt toevoegen? Beargumenteer je keuze.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Stap 3&lt;/h3&gt;
&lt;p&gt;Probeer aan de hand van de REST documentatie die je net in de browser hebt bekeken de applicatie te benaderen. Hint: de pagina (het path) dat je moet laden is &quot;index.html&quot;. Als je deze stap succesvol uitvoert, verschijnt er een pagina waarop een gebruikerselectie is te maken in je browser.&lt;/p&gt;
&lt;h3&gt;Stap 4&lt;/h3&gt;
&lt;p&gt;Open in WebStorm het bestand &quot;opdrachten/case1/template.html&quot;. Zoek de &quot;select&quot; met als id &quot;gebruikersdropdown&quot; en voeg hier je eigen naam aan toe, op de manier zoals er nu reeds 3 namen staan. Reload de client die je in stap 3 in je browser hebt geladen. Als het goed is zie je in de dropdown nu de door jouw toegevoegde gebruikersnaam staan.&lt;/p&gt;
&lt;p&gt;Je hebt waarschijnlijk gemerkt dat je niet de NodeJS server hebt hoeven restarten, of in WebStorm het bestand hebt moeten opslaan. Voor aanpassingen die je gedurende deze training doet zijn beide zaken niet nodig, NodeJS zorgt ervoor dat altijd de actuele bestanden van het filesystem worden geladen en WebStorm zorgt dat na het editen van files meteen een &quot;auto-save&quot; wordt uitgevoerd.&lt;/p&gt;
]]></content><private><![CDATA[]]></private><author><![CDATA[jsadmin]]></author></item>
