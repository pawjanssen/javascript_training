<?xml version="1.0" encoding="UTF-8"?>
<item><pubDate>Fri, 13 Feb 2015 15:11:45 +0100</pubDate><title><![CDATA[Case 3 - Structurering bestanden]]></title><url><![CDATA[case-3-structurering-bestanden]]></url><meta><![CDATA[]]></meta><metad><![CDATA[]]></metad><menu><![CDATA[Case 3 - Structurering bestanden]]></menu><menuOrder><![CDATA[5]]></menuOrder><menuStatus><![CDATA[Y]]></menuStatus><template><![CDATA[template.php]]></template><parent><![CDATA[]]></parent><content><![CDATA[&lt;h2&gt;Source&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;data/uploads/case3.zip&quot;&gt;Download de source&lt;/a&gt; voor deze opdracht om te beginnen met de case. Pak de zip file uit zoals je in case 1 hebt geleerd. Als het goed is zie je nu in WebStorm onder de folder &quot;opdrachten&quot; de sources van case 3 staan.&lt;br /&gt;
	&lt;a href=&quot;data/uploads/case3_structurering_bestanden.pdf&quot;&gt;Presentatie in PDF&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Omschrijving&lt;/h2&gt;
&lt;p&gt;Zojuist is verteld hoe je je javascript kunt opsplitsen in meerdere bestanden. Doel van deze opdracht is herkennen welke stukken javascript logischerwijs in een eigen bestand horen om zo de code overzichtelijk te houden. Daarnaast leer je over de volgordelijkheid van de in te laden code.&lt;/p&gt;
&lt;h2&gt;Opdracht 1 - Structurering&lt;/h2&gt;
&lt;p&gt;Open in je browser de URL &quot;http://localhost:8000/opdrachten/case3/template.html&quot; om de derde case te laden. Je ziet het todoscherm van de applicatie voor je.&lt;/p&gt;
&lt;p&gt;Open in WebStorm het bestand &quot;opdrachten/case3/template.html&quot;. Bovenin staat op dit moment 1 javascript bestand dat wordt ingeladen. Open dit javascript bestand en probeer te begrijpen wat er gebeurd. Beantwoord onderstaande vragen:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Wat is de functie van de TodoView?&lt;/li&gt;
	&lt;li&gt;Wat is de functie van de eventlistener die op het window wordt geplaatst?&lt;/li&gt;
	&lt;li&gt;In hoeveel delen zou je dit bestand opsplitsen?&lt;/li&gt;
	&lt;li&gt;Waarom is de volgorde van de delen die je onderkent hebt in vraag 3 van belang?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Als je bovenstaande vragen hebt beantwoord, probeer dan het bestaande javascript bestand op te splitsen in het aantal delen dat je hebt onderkent in vraag 3. Dit betekend dat je dus net zo veel javascript bestanden krijgt als het aantal onderkende delen. Controleer tevens of de applicatie nog werkt, door in de browser een refresh te geven.&lt;/p&gt;
&lt;h2&gt;Opdracht 2 - Betere manier van inladen&lt;/h2&gt;
&lt;p&gt;Als je opdracht 1 afhebt, verwijder dan de eventlistener die op het window wordt geplaatst. Zorg er wel voor dat de code die afgetrapt wordt door de eventlistener blijft staan. Dus het renderen van todos en gebruikers moet wel nog plaatsvinden, alleen niet meer in de eventlistener. Beantwoord onderstaande vragen:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Refresh vervolgens je browser, wat gebeurd er nu?&lt;/li&gt;
	&lt;li&gt;Waarom denk je dat de pagina nu niet meer werkt zoals die werkte met de eventlistener?&lt;/li&gt;
	&lt;li&gt;Hoe zorg je ervoor dat de pagina weer werkt als voorheen, zonder de eventlistener terug te plaatsen? Probeer dit uit, en refresh de pagina om te verifieren of alles weer werkt als voorheen.&lt;/li&gt;
	&lt;li&gt;Welke voordelen biedt de oplossing die je in vraag 3 hebt bedacht nog meer?&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Opdracht 3 - Extra opdracht&lt;/h2&gt;
&lt;p&gt;Mocht je tijd overhebben na het maken van bovenstaande opdrachten, dan kun je je middels deze opdrachten verdiepen in het inladen van javascript middels javascript. Op dit moment heb je in het template een aantal javascript tags staan waarmee je de verschillende bestanden inlaad.&lt;/p&gt;
&lt;p&gt;Probeer middels deze opdracht ervoor te zorgen dat er maar 1 javascript bestand wordt geladen vanuit het template. Dit script bevat dan de initialisatie code van de applicatie, en middels dit initialisatie script dien je in deze extra opdracht de andere javascript bestanden in te laden. Tijdens het uitvoeren van deze opdracht komen enkele concepten voor die nog niet zijn behandeld. Daarom hieronder wat tips.&lt;/p&gt;
&lt;p&gt;Tips:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Middels &lt;span style=&quot;font-family:courier new,courier,monospace;&quot;&gt;var nieuweScriptTag = document.createElement(&quot;script&quot;);&lt;/span&gt; kun je programmatisch een scripttag maken.&lt;/li&gt;
	&lt;li&gt;Middels &lt;span style=&quot;font-family:courier new,courier,monospace;&quot;&gt;nieuweScriptTag.setAttribute(&quot;key&quot;, &quot;value&quot;);&lt;/span&gt; kun je attributen zetten.&lt;/li&gt;
	&lt;li&gt;Gebruik de case 2 geleerde selectors om de scripttag aan de body toe te voegen.&lt;/li&gt;
	&lt;li&gt;Gebruik &lt;span style=&quot;font-family:courier new,courier,monospace;&quot;&gt;nieuweScriptTag.onload = function() {}&lt;/span&gt; om code uit te voeren als een script klaar is met laden. Dit mechanisme heet een callback.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
]]></content><private><![CDATA[]]></private><author><![CDATA[jsadmin]]></author></item>
